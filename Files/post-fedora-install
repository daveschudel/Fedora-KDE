#!/bin/bash
# Fedora KDE configuration script.
# Configures:
#   Hostname
#   DNF options
#   Repositories
#   Apps to install & delete
#   Groups to install
#   Microsoft fonts
#   Plymouth boot theme
#   Laptop power management
#   Grub
# 
# This script runs from a directory with this structure:
# ./
# ./Grub -> Grub theme

source ./colors.sh   # Color codes

# Set the hostname to..
HOSTNAME="Mikasa-VM"

# Initialize log w/time & date
INITLOG="true"

# Installing on a laptop? if so, install power management
POWER_MANAGEMENT="false"

# Setup GRUB
SETUPBOOT="true"

# Install extra KDE development packages
INSTALL_KDE_DEV="false"

# Install Plymouth theme
INSTALL_PLYMOUTH_THEME="false"
PLYMOUTH_THEME="spinfinity"

# List of individual apps to install (not in groups)
APPSFILE="setup-install-apps.txt"

# List of software groups to install
GROUPSFILE="setup-install-groups.txt"

# List of apps to remove
REMOVEFILE="setup-remove-apps.txt"

# List of packages needed for KDE development
KDEFILE="setup-install-kdelibs.txt"

LOGFILE="install.log"

# Some color aliases to make things easier
HEADINGCOLOR=$CYAN_F
SUBHEADINGCOLOR=$YELLOW_F
INDENTEDCOLOR=$GREEN_F
# -----------------------------------------------------------------------------

clear
echo
echo -e "${BOLD}${HEADINGCOLOR}Fedora Post-Install Setup ${BOLD}${NORM}"
echo
if (( $EUID != 0 )); then
  echo -e "${BOLD}${SUBHEADINGCOLOR}Please run as root${NORM}"
  exit
fi

echo -e "${BOLD}${HEADINGCOLOR}Verify Settings${NORM}"
echo
echo -e "  ${BOLD}${SUBHEADINGCOLOR}Options${NORM}"
echo -e "  ${BOLD}${INDENTEDCOLOR}Install Power Management?      ${BOLD}$POWER_MANAGEMENT${NORM}"
echo -e "  ${BOLD}${INDENTEDCOLOR}Configure Grub?                ${BOLD}$SETUPBOOT${NORM}"
echo -e "  ${BOLD}${INDENTEDCOLOR}Install KDE Development tools? ${BOLD}$INSTALL_KDE_DEV${NORM}"
echo -e "  ${BOLD}${INDENTEDCOLOR}Install Plymouth Theme?        ${BOLD}$INSTALL_PLYMOUTH_THEME${NORM}"
echo
echo -e "  ${BOLD}${SUBHEADINGCOLOR}Configuration${NORM}"
echo -e "  ${BOLD}${INDENTEDCOLOR}Set Hostname to:               ${BOLD}$HOSTNAME${NORM}"
echo
echo -e "  ${BOLD}${SUBHEADINGCOLOR}Sources${NORM}"
echo -e "  ${BOLD}${INDENTEDCOLOR}Apps to install:               ${BOLD}$APPSFILE${NORM}"
echo -e "  ${BOLD}${INDENTEDCOLOR}Groups to install:             ${BOLD}$GROUPSFILE${NORM}"
echo -e "  ${BOLD}${INDENTEDCOLOR}Apps to remove:                ${BOLD}$REMOVEFILE${NORM}"
echo -e "  ${BOLD}${INDENTEDCOLOR}Logfile:                       ${BOLD}$LOGFILE${NORM}"
echo
read -p "Options correct? Press any key to continue or CTRL-C to quit" answer

# -----------------------------------------------------------------------------
STARTTIME=$(date)

if [ $INITLOG == "true" ];
then
  echo "Starting at $STARTTIME" > $LOGFILE
  echo -e "${BOLD}${HEADINGCOLOR}Initializing log${NORM}"
  echo "Starting script at $STARTTIME" >> $LOGFILE
fi

echo -e "${BOLD}${HEADINGCOLOR}Setting Hostname to $HOSTNAME${NORM}"
hostnamectl set-hostname $HOSTNAME >> $LOGFILE

echo -e "${BOLD}${HEADINGCOLOR}Configuring DNF${NORM}"
echo "Configuring DNF" >> $LOGFILE
echo "fastestmirror=1" >> /etc/dnf/dnf.conf

#------------------------------------------------------------------------------
echo -e "${BOLD}${HEADINGCOLOR}Installing repositories${NORM}"

echo -e "  ${BOLD}${INDENTEDCOLOR}RPM Fusion Free${BOLD}${NORM}"
dnf install -y -q https://download1.rpmfusion.org/free/fedora/rpmfusion-free-release-$(rpm -E %fedora).noarch.rpm >> $LOGFILE

echo -e "  ${BOLD}${INDENTEDCOLOR}RPM Fusion Non-Free${BOLD}${NORM}"
dnf install -y -q https://download1.rpmfusion.org/nonfree/fedora/rpmfusion-nonfree-release-$(rpm -E %fedora).noarch.rpm >> $LOGFILE

# Add any other repos needed here
#echo -e "  ${BOLD}${INDENTEDCOLOR}Vivaldi${BOLD}${NORM}"
#dnf config-manager --add-repo https://repo.vivaldi.com/archive/vivaldi-fedora.repo>> $LOGFILE

echo -e "  ${BOLD}${INDENTEDCOLOR}Flathub${BOLD}${NORM}"
flatpak remote-add --if-not-exists flathub https://flathub.org/repo/flathub.flatpakrepo
#------------------------------------------------------------------------------

echo -e "${BOLD}${HEADINGCOLOR}Removing unwanted apps${NORM}"
while IFS= read -r line
do
  filename="${line%%\#*}"
  echo -e "  ${BOLD}${INDENTEDCOLOR}$filename${NORM}"
  dnf -y -q remove $filename #
done < $REMOVEFILE

echo -e "${BOLD}${HEADINGCOLOR}Installing Software Groups${NORM}"

while IFS= read -r line
do
  filename="${line%%\#*}"
  echo -e "  ${BOLD}${INDENTEDCOLOR}$filename${NORM}"
  dnf groupinstall -y -q "$filename"
done < $GROUPSFILE

echo -e "${BOLD}${HEADINGCOLOR}Installing Individual Apps${NORM}"

while IFS= read -r line
do
  filename="${line%%\#*}"
  echo -e "  ${BOLD}${INDENTEDCOLOR}$filename${NORM}"
  dnf -y -q install $filename
done < $APPSFILE

if [ $INSTALL_KDE_DEV == "true" ];
then
  echo -e "${BOLD}${HEADINGCOLOR}Installing Required Apps for KDE Development${NORM}"
  echo -e "${BOLD}${HEADINGCOLOR}Run ${NORM}"
  while IFS= read -r line
do
  filename="${line%%\#*}"
  echo -e "  ${BOLD}${INDENTEDCOLOR}$filename${NORM}"
  dnf -y -q install $filename
done < $KDEFILE
fi

#------------------------------------------------------------------------------
# These are the free/public Microsoft fonts. It makes life MUCH easier by not
# mapping the general Microsoft fonts to something strange with files created
# in Office.

echo -e "${BOLD}${HEADINGCOLOR}Installing Microsoft Fonts${NORM}"
rpm -i --quiet https://downloads.sourceforge.net/project/mscorefonts2/rpms/msttcore-fonts-installer-2.6-1.noarch.rpm

#------------------------------------------------------------------------------
if [ $POWER_MANAGEMENT == "true" ];
then
  echo -e "${BOLD}${HEADINGCOLOR}Enabling Laptop Power Management${NORM}"
  systemctl enable tlp
  cpupower frequency-set --governor conservative
fi

#------------------------------------------------------------------------------
# GRUB

# We need to determine which font to use in Grub. The smaller font looks better
# on the laptop while the larger works on the desktop. Grub/theme-*.txt have the
# desired fonts for that system. I put two theme files in the poly-dark directory:
# theme-laptop.txt and theme-desktop.txt. Just copy the one you want to theme.txt

# I use a theme called poly-dark I got from gnome-look.org and changed the
# background & fonts

# Also for Grub, if I have a multi-boot machine and Windows is one of the
# OSs installed, I go into /etc/grub.d/30_os-prober as root and find the 
# 'menuentry' immediately after searching for 'Windows' and change the 
# first part to menuentry '$(echo "Windows")'. That way it just says 'Windows'
# and not all the stuff about what partition it's on.

# Or, you could change it to read 'Windoze, 'Help me God' or whatever you'd like :)

if [ $SETUPBOOT == "true" ];
then
  echo -e "${BOLD}${HEADINGCOLOR}Setting up GRUB2, Theme & Config${NORM}"
  # Backup our grub config first
  cp /etc/default/grub /etc/default/grub.bak

  # Install Grub theme
  cp -r Grub/poly-dark /boot/grub2/themes

  # Comment out the default settings
  sed -ie 's/GRUB_TERMINAL/#GRUB_TERMINAL/' /etc/default/grub
  sed -ie 's/GRUB_ENABLE_BLSCFG/#GRUB_ENABLE_BLSCFG/' /etc/default/grub
  sed -ie 's/GRUB_DEFAULT/#GRUB_DEFAULT/' /etc/default/grub
  sed -ie 's/GRUB_DISABLE_SUBMENU/#GRUB_DISABLE_SUBMENU/' /etc/default/grub
  sed -ie 's/GRUB_DISABLE_RECOVERY/#GRUB_DISABLE_RECOVERY/' /etc/default/grub

  # Update with mine
  echo "#-- Added by setup script, remove duplicates --" >> /etc/default/grub
  echo "GRUB_THEME=/boot/grub2/themes/poly-dark/theme.txt" >> /etc/default/grub
  echo "GRUB_DISABLE_SUBMENU=false" >> /etc/default/grub
  echo "GRUB_DISABLE_RECOVERY=false" >> /etc/default/grub
  echo "GRUB_DEFAULT=0" >> /etc/default/grub
  echo "GRUB_ENABLE_BLSCFG=false" >> /etc/default/grub

  # Important - for a UEFI machine this is how to rebuild grub.cfg.
  # (For BIOS machines it needs to be: grub2-mkconfig -o /boot/grub2/grub.cfg)
  grub2-mkconfig -o /boot/efi/EFI/fedora/grub.cfg
fi

if [ $INSTALL_PLYMOUTH_THEME == "true" ];
  then
# Make sure the Plymouth theme you want is installed
  echo -e "${BOLD}${CYAN_F}Setting Plymouth Boot Theme to $PLYMOUTH_THEME${NORM}"
  plymouth-set-default-theme $PLYMOUTH_THEME -R
fi

ENDTIME=$(date)
echo -e "${BOLD}${CYAN_F}Completed at $ENDTIME${NORM}"
